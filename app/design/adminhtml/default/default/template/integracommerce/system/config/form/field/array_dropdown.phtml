<?php
/**
 * Fontis Campaign Monitor Extension
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com and you will be sent a copy immediately.
 *
 * @copyright  Copyright (c) 2015 Fontis Pty. Ltd. (http://www.fontis.com.au)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<?php
$htmlId = $this->getHtmlId() ? $this->getHtmlId() : '_' . uniqid();

$colspan = 2;
if (!$this->_addAfter) {
    $colspan--;
}

$colspan = $colspan > 1 ? 'colspan="' . $colspan . '"' : '';
?>

<div class="grid" id="grid<?php echo $this->escapeHtml($htmlId); ?>">
    <table cellpadding="0" cellspacing="0" class="border">
        <tbody>

            <tr class="headings" id="headings<?php echo $this->escapeHtml($htmlId); ?>">
            <?php foreach ($this->_columns as $columnName => $column): ?>
                <th><?php echo $this->escapeHtml($column['label']); ?></th>
            <?php endforeach; ?>
                <th <?php echo $this->escapeHtml($colspan); ?>></th>
            </tr>

            <tr id="addRow<?php echo $this->escapeHtml($htmlId); ?>">
                <td colspan="<?php echo count($this->_columns); ?>"></td>
                <td <?php echo $this->escapeHtml($colspan); ?>>
                    <button style="" onclick="" class="scalable add" type="button" id="addToEndBtn<?php 
                    echo $this->escapeHtml($htmlId); ?>">
                        <span><span><span><?php echo $this->escapeHtml($this->_addButtonLabel); ?></span></span></span>
                    </button>
                </td>
            </tr>

        </tbody>
    </table>
    <input type="hidden" name="<?php echo $this->escapeHtml($this->getElement()->getName()); ?>[__empty]" value="" />
</div>
<div id="empty<?php echo $this->escapeHtml($htmlId); ?>">
    <button style="" onclick="" class="scalable add" type="button" id="emptyAddBtn<?php 
    echo $this->escapeHtml($htmlId); ?>">
        <span><span><span><?php echo $this->escapeHtml($this->_addButtonLabel); ?></span></span></span>
    </button>
</div>

<script type="text/javascript">
// <!--
// create row creator
var arrayRow<?php echo $this->escapeHtml($htmlId); ?> = {
    // define row prototypeJS template
    template : new Template(
        '<tr id="#{_id}">'
<?php foreach ($this->_columns as $columnName => $column):?>
            +'<td class="#{_id}-<?php echo $this->escapeHtml($columnName)?>">'
                +'<?php echo /* @noEscape */ $this->_renderCellTemplate($columnName); ?>'
            +'</td>'
<?php endforeach; ?>
<?php if ($this->_addAfter): ?>
            +'<td><button onclick="" class="scalable add" type="button" id="addAfterBtn#{_id}"><span><span><span><?php 
            echo 'Adicionar' ?></span></span></span></button></td>'
<?php endif; ?>
            +'<td><button onclick="arrayRow<?php 
            echo $this->escapeHtml($htmlId) 
            ?>.del(\'#{_id}\')" class="scalable delete" type="button"><span><span><span><?php 
            echo 'Remover' 
            ?></span></span></span></button></td>'
        +'</tr>'
    ),

    rowsCount : 0,

    add : function(templateData, insertAfterId)
    {
        // generate default template data
        if ('' == templateData) {
            var d = new Date();
            var templateData = {
<?php foreach ($this->_columns as $columnName => $column): ?>
                <?php echo $this->escapeHtml($columnName) ?> : '',
<?php endforeach; ?>
                _id : '_' + d.getTime() + '_' + d.getMilliseconds()
            };
        }

        if ('' == insertAfterId) {
            // insert before last row
            new Insertion.Before(
                $('addRow<?php echo $this->escapeHtml($htmlId) ?>'),
                this.template.evaluate(templateData)
            );
        } else {
            // insert after specified row
            new Insertion.After(
                $(insertAfterId),
                this.template.evaluate(templateData)
            );
        }
        // set the selected drop-down list item
<?php foreach ($this->_columns as $columnName => $column): ?>
        var options = $$('td.' + templateData._id + '-' + '<?php echo $this->escapeHtml($columnName); ?>' + ' option')
        for(var index = 0; index < options.length; ++index)
        {
            var option = options[index]
            if(option.getAttribute('value') == templateData.<?php echo $this->escapeHtml($columnName); ?>)
            {
                option.selected = true
            }
        }
<?php endforeach; ?>

<?php if ($this->_addAfter): ?>
        Event.observe('addAfterBtn' + templateData._id, 'click', this.add.bind(this, '', templateData._id));
<?php endif; ?>

        this.rowsCount += 1;
    },

    del : function(rowId)
    {
        $(rowId).remove();
        this.rowsCount -= 1;
        if (0 == this.rowsCount) {
            this.showButtonOnly();
        }
    },

    showButtonOnly : function()
    {
        $('grid<?php echo $this->escapeHtml($htmlId) ?>').hide();
        $('empty<?php echo $this->escapeHtml($htmlId) ?>').show();
    }
}

// bind add action to "Add" button in last row
Event.observe('addToEndBtn<?php echo $this->escapeHtml($htmlId); ?>', 'click', arrayRow<?php 
    echo $this->escapeHtml($htmlId); ?>.add.bind(arrayRow<?php 
    echo $this->escapeHtml($htmlId); ?>, '', ''));

// add existing rows
<?php
$addAfterId = "headings{$htmlId}";
foreach ($this->getArrayRows() as $rowId => $row) {
    echo $this->escapeHtml("arrayRow{$htmlId}.add(") . 
    $this->jsQuoteEscape($row->toJson()) . 
    $this->escapeHtml(", '{$addAfterId}');\n");
    $addAfterId = $rowId;
}
?>

// initialize standalone button
$('empty<?php echo $this->escapeHtml($htmlId); ?>').hide();
Event.observe('emptyAddBtn<?php echo $this->escapeHtml($htmlId) ?>', 'click', function () {
    $('grid<?php echo $this->escapeHtml($htmlId); ?>').show();
    $('empty<?php echo $this->escapeHtml($htmlId); ?>').hide();
    arrayRow<?php echo $this->escapeHtml($htmlId); ?>.add('', '');
});

// if no rows, hide grid and show button only
<?php if (!$this->getArrayRows()):?>
arrayRow<?php echo $this->escapeHtml($htmlId); ?>.showButtonOnly();
<?php endif;?>

// toggle the grid, if element is disabled (depending on scope)
<?php if ($this->getElement()->getDisabled()): ?>
toggleValueElements({checked:true}, $('grid<?php echo $this->escapeHtml($htmlId); ?>').parentNode);
<?php endif;?>
// -->
</script>
